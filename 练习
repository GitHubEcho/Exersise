字典：

字典是无序的，它不能通过偏移来存取，只能通过键来存取。

字典 = {'key':value} key：类似我们现实的钥匙，而value则是锁。一个钥匙开一个锁

特点：

内部没有顺序，通过键来读取内容，可嵌套，方便我们组织多种数据结构，并且可以原地修改里面的内容，

属于可变类型。

组成字典的键必须是不可变的数据类型，比如，数字，字符串，元组等，列表等可变对象不能作为键.

1 创建字典。{},dict()

info = {'name':'lilei', 'age': 20}

info  = dict(name='lilei',age=20)

2 添加内容 a['xx'] = 'xx'

比如  info['phone'] = 'iphone5'

3 修改内容 a['xx'] = 'xx' ,

info['phone'] = 'htc'

update 参数是一个字典的类型，他会覆盖相同键的值

info.update({'city':'beijing','phone':'nokia'})

htc 变成了nokia了

4 删除 del,clear,pop

del info['phone'] 删除某个元素

info.clear()删除字典的全部元素

info.pop('name')

5 in 和 has_key() 成员关系操作

比如：

1 phone in info

2  info.has_key('phone')

6 keys(): 返回的是列表，里面包含了字典的所有键

values():返回的是列表，里面包含了字典的所有值

items：生成一个字典的容器：[()]

7 get：从字典中获得一个值

info.get('name')

info.get('age2','22')














字典习题:

        已知字典：ainfo = {'ab':'liming','ac':20}

        完成下面的操作

        1 使用2个方法，输出的结果：

        ainfo = {'ab':'liming','ac':20,'sex':'man','age':20}

        2 输出结果：['ab','ac']

        3 输出结果：['liming',20]

        4 通过2个方法返回键名ab对应的值。

        5 通过2个方法删除键名ac对应的值。


##习题1：


列表a = [11,22,24,29,30,32]


1 把28插入到列表的末端


2 在元素29后面插入元素57


3 把元素11修改成6


3 删除元素32


4 对列表从小到大排序


##习题2：


列表b = [1,2,3,4,5]


1 用2种方法输出下面的结果：


[1,2,3,4,5,6,7,8]#TODO两种？




2 用列表的2种方法返回结果：[5,4]


3 判断2是否在列表里


##习题3：


b = [23,45,22,44,25,66,78]


用列表解析完成下面习题：


1 生成所有奇数组成的列表


2 输出结果: ['the content 23','the content 45']


3 输出结果: [25, 47, 24, 46, 27, 68, 80]


##习题4：


用range方法和列表推导的方法生成列表：


[11,22,33]




##习题5：


已知元组:a = (1,4,5,6,7)


1 判断元素4是否在元组里


2 把元素5修改成8


##习题6：


已知集合:setinfo = set('acbdfem')和集合finfo = set('sabcdef')完成下面操作：


1 添加字符串对象'abc'到集合setinfo


2 删除集合setinfo里面的成员m


3 求2个集合的交集和并集


##习题7：


用字典的方式完成下面一个小型的学生管理系统。


1 学生有下面几个属性：姓名，年龄，考试分数包括：语文，数学，英语得分。


比如定义2个同学：


姓名：李明，年龄25，考试分数：语文80，数学75，英语85


姓名：张强，年龄23，考试分数：语文75，数学82，英语78


2 给学生添加一门python课程成绩，李明60分，张强：80分


3 把张强的数学成绩由82分改成89分


4 删除李明的年龄数据


5 对张强同学的课程分数按照从低到高排序输出。


6 外部删除学生所在的城市属性，不存在返回字符串 beijing